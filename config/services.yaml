# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.MQTT_SERVER: '%env(MQTT_SERVER)%'
    app.MQTT_PORT: '%env(MQTT_PORT)%'
    app.MQTT_USER: '%env(MQTT_USER)%'
    app.MQTT_PASSWORD: '%env(MQTT_PASSWORD)%'
services:
    App\Domain\Validations\Validator: '@App\Service\Validation\SymfonyValidator'

    App\Domain\Validations\IConstraints: '@App\Service\Validation\SymfonyConstraints'

    # App\Domain\Devices\IUserCommunicator: '@App\Infra\UserCommunicationSSE'

    App\Domain\Account\Documents\ValidationRules\DocumentValidation: 
        arguments:
            $validationsForDocuments: 
                - '@App\Domain\Account\Documents\ValidationRules\CpfValidaton.php'

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\EventListener\InvalidInputExceptionListener:
        tags: ['kernel.event_listener']

    App\EventListener\NotConfirmedEmailExceptionistener:
        tags: ['kernel.event_listener']

    App\EventListener\RegisterAccount\UserEmailAlreadyRegisteredExceptionListener:
        tags: ['kernel.event_listener']

    App\EventListener\DomainExceptionListener:
        tags: ['kernel.event_listener']




    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
